---
# tasks file for sentinelone
- name: Copy installer to server (RH)
  ansible.builtin.copy:
    src: files/{{ rh_installer }}
    dest: /tmp
    mode: '0644'
  when: ansible_facts["os_family"] == "RedHat"

- name: Copy installer to server (Debian)
  ansible.builtin.copy:
    src: files/{{ deb_installer }}
    dest: /tmp
    mode: '0644'
  when: ansible_facts["os_family"] == "Debian"

- name: Check if S1 is installed
  ansible.builtin.stat:
    path: /opt/sentinelone
  register: s1_installed

- name: Install Sentinelone (RH)
  ansible.builtin.command: >
    rpm -i /tmp/{{ rh_installer }} --nodigest
  changed_when: not s1_installed.stat.exists
  when: ansible_facts["os_family"] == "RedHat"

- name: Install Sentinelone (Debian)
  ansible.builtin.command: >
    dpkg -i /tmp/{{ deb_installer }}
  changed_when: not s1_installed.stat.exists
  when: ansible_facts["os_family"] == "Debian"

- name: Apply Sentinelone token
  ansible.builtin.command: >
    {{ sentinelone_dir }}/sentinelctl management token set {{ sentinelone_token }}

- name: Restart Sentinelone service; enable on startup
  ansible.builtin.service:
    name: sentinelone
    state: restarted
    enabled: true